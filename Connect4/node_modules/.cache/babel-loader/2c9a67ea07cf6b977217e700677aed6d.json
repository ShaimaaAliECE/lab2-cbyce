{"ast":null,"code":"var _jsxFileName = \"/Users/cambyce/Downloads/University/Web Technologies (SE 3316)/Labs/Lab2/lab2/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n/* function BoardCountingButton(props)\n{\n  const [count, setCount] = useState(0);\n  return (\n    <button id='props.id' onClick={() => {setCount(count + 1)}}>\n      This button was clicked {count} times.\n    </button>\n  );\n} */\n\n/*class Hole extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {owner: ''}\n  }\n\n  render()\n  {\n    return (\n      <button id={this.props.id} onClick={() => \n                                                {\n                                                  if (this.state.owner === '') {\n                                                    this.setState({owner: 'You'});\n                                                  } \n                                                }\n                                          }>\n        {this.state.owner}\n      </button>\n    );\n  }\n\n  componentDidMount() \n  {\n    //alert(\"The button was just introduced ==>\" + document.getElementById('btn').getBoundingClientRect().top);\n  }\n  componentDidUpdate()\n  {\n    //this.props.playersTurn = (this.props.playersTurn === 'Red')? 'Blue' : 'Red';\n    //alert(\"This button has updated\")\n  }\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hole(props) {\n  let x = props.playersTurn;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: props.id,\n    onClick: () => {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Hole;\n\nclass GameBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winner: '',\n      playersTurn: 'Red'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Hole, {\n        id: \"AA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), this.state.playersTurn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(GameBoard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Hole\");","map":{"version":3,"sources":["/Users/cambyce/Downloads/University/Web Technologies (SE 3316)/Labs/Lab2/lab2/src/index.js"],"names":["React","useState","ReactDOM","Hole","props","x","playersTurn","id","GameBoard","Component","constructor","state","winner","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAClB,MAAIC,CAAC,GAAGD,KAAK,CAACE,WAAd;AAEA,sBACI;AAAQ,IAAA,EAAE,EAAEF,KAAK,CAACG,EAAlB;AAAsB,IAAA,OAAO,EAAE,MAAM,CAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;KARQJ,I;;AAWT,MAAMK,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CACA;AACEC,EAAAA,WAAW,CAACN,KAAD,EACX;AACE,UAAMA,KAAN;AAEA,SAAKO,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXN,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKD;;AACDO,EAAAA,MAAM,GACN;AACE,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKF,KAAL,CAAWL,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnBH;;AAsBAJ,QAAQ,CAACW,MAAT,eACE;AAAA,yBACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n/* function BoardCountingButton(props)\n{\n  const [count, setCount] = useState(0);\n  return (\n    <button id='props.id' onClick={() => {setCount(count + 1)}}>\n      This button was clicked {count} times.\n    </button>\n  );\n} */\n/*class Hole extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {owner: ''}\n  }\n\n  render()\n  {\n    return (\n      <button id={this.props.id} onClick={() => \n                                                {\n                                                  if (this.state.owner === '') {\n                                                    this.setState({owner: 'You'});\n                                                  } \n                                                }\n                                          }>\n        {this.state.owner}\n      </button>\n    );\n  }\n\n  componentDidMount() \n  {\n    //alert(\"The button was just introduced ==>\" + document.getElementById('btn').getBoundingClientRect().top);\n  }\n  componentDidUpdate()\n  {\n    //this.props.playersTurn = (this.props.playersTurn === 'Red')? 'Blue' : 'Red';\n    //alert(\"This button has updated\")\n  }\n}*/\n\nfunction Hole(props){\n  let x = props.playersTurn;\n  \n  return (\n      <button id={props.id} onClick={() => {}}>\n\n      </button>\n    );\n}\n\n\nclass GameBoard extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      winner: '',\n      playersTurn: 'Red',\n\n    }\n  }\n  render() \n  {\n    return (\n      <div>\n        <Hole id='AA' />\n        {this.state.playersTurn}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <div>\n    <GameBoard />\n  </div>\n  ,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}