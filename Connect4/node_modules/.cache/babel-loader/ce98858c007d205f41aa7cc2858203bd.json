{"ast":null,"code":"var _jsxFileName = \"/Users/cambyce/Downloads/University/Web Technologies (SE 3316)/Labs/Lab2/lab2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  flexDirection: 'column',\n  height: '55%'\n};\nconst pageStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-evenly',\n  flexDirection: 'column',\n  height: '100vh',\n  backgroundColor: 'antiquewhite'\n}; //Should I just move this to the bottom code or leep it here\n\nfunction ResetBtn() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"resetBtn\",\n    onClick: () => {\n      window.location.reload(false);\n    },\n    children: \"Click To Restart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ResetBtn;\n\nfunction TurnMessage(props) {\n  let message;\n\n  if (props.win !== '') {\n    message = \"Player Wins!\";\n  } else {\n    message = \"Players Turn\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TurnMessage;\n\nfunction Hole(props) {\n  const holesStyle = {\n    backgroundColor: props.owner,\n    height: '50px',\n    width: '50px',\n    borderRadius: '25px',\n    margin: '5px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: holesStyle,\n    id: props.id,\n    onClick: props.onClick,\n    disabled: props.disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Hole;\n\nclass GameBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameBoard: new Array(6).fill(new Array(7).fill('white')),\n      winner: '',\n      count: 0,\n      playersTurn: 'red' //Game starts with red player \n\n    };\n  }\n\n  renderHole(posX, posY) {\n    let holeId = 'X' + posX + 'Y' + posY;\n    return (\n      /*#__PURE__*/\n      //Edit onclick to be better aligned\n      _jsxDEV(Hole, {\n        id: holeId,\n        owner: this.state.gameBoard[posY][posX],\n        disabled: this.state.gameBoard[posY][posX] !== 'white' || this.state.winner !== '',\n        onClick: () => {\n          const newBoard = this.state.gameBoard.map(arr => {\n            return arr.slice();\n          });\n          let newVal = newBoard[posY];\n          newVal[posX] = this.state.playersTurn;\n          this.setState({\n            playersTurn: this.state.playersTurn === 'red' ? 'yellow' : 'red',\n            gameBoard: newBoard,\n            count: this.state.count + 1,\n            winner: checkWinner(newBoard)\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n  renderRow(posY) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderHole(0, posY), this.renderHole(1, posY), this.renderHole(2, posY), this.renderHole(3, posY), this.renderHole(4, posY), this.renderHole(5, posY), this.renderHole(6, posY)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: 'white',\n          border: '2px solid black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Hole, {\n          owner: this.state.playersTurn,\n          id: \"displayDot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TurnMessage, {\n          win: this.state.winner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'blue',\n          borderRadius: '5px',\n          width: '420px'\n        },\n        children: [this.renderRow(0), this.renderRow(1), this.renderRow(2), this.renderRow(3), this.renderRow(4), this.renderRow(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidUpdate() {\n    //Move around parts so not in did update\n    let win = checkWinner(this.state.gameBoard);\n    console.log(win);\n  }\n\n}\n\nfunction checkFour(a, b, c, d) {\n  return a !== 'white' && b !== 'white' && c !== 'white' && d !== 'white' && a === b && b === c && c === d;\n}\n\nfunction checkWinner(b) {\n  for (var j = 0; j < 6; j++) {\n    for (var i = 0; i < 4; i++) {\n      if (checkFour(b[j][0 + i], b[j][1 + i], b[j][2 + i], b[j][3 + i])) {\n        return b[j][0 + i];\n      }\n    }\n  }\n\n  for (var j = 0; j < 7; j++) {\n    for (var i = 0; i < 3; i++) {\n      if (checkFour(b[0 + i][j], b[1 + i][j], b[2 + i][j], b[3 + i][j])) {\n        return b[0 + i][j];\n      }\n    }\n  }\n\n  return '';\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  style: pageStyle,\n  children: [/*#__PURE__*/_jsxDEV(GameBoard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ResetBtn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 191,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ResetBtn\");\n$RefreshReg$(_c2, \"TurnMessage\");\n$RefreshReg$(_c3, \"Hole\");","map":{"version":3,"sources":["/Users/cambyce/Downloads/University/Web Technologies (SE 3316)/Labs/Lab2/lab2/src/index.js"],"names":["React","ReactDOM","boardStyle","display","alignItems","justifyContent","flexDirection","height","pageStyle","backgroundColor","ResetBtn","window","location","reload","TurnMessage","props","message","win","Hole","holesStyle","owner","width","borderRadius","margin","id","onClick","disabled","GameBoard","Component","constructor","state","gameBoard","Array","fill","winner","count","playersTurn","renderHole","posX","posY","holeId","newBoard","map","arr","slice","newVal","setState","checkWinner","renderRow","render","border","componentDidUpdate","console","log","checkFour","a","b","c","d","j","i","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst boardStyle = {\n  display: 'flex',\n  alignItems: 'center', \n  justifyContent: 'space-evenly', \n  flexDirection: 'column',\n  height: '55%'\n}\n\nconst pageStyle = {\n  display: 'flex',\n  alignItems: 'center', \n  justifyContent: 'space-evenly', \n  flexDirection: 'column',\n  height: '100vh',\n  backgroundColor: 'antiquewhite'\n}\n\n//Should I just move this to the bottom code or leep it here\nfunction ResetBtn(){\n  return (\n    <button id={\"resetBtn\"} onClick={() => \n                      {\n                        window.location.reload(false);\n                      }\n                    }>\n      Click To Restart\n    </button>\n  );\n}\n\nfunction TurnMessage(props) {\n\n  let message;\n\n  if (props.win !== '') {\n    message = \"Player Wins!\";\n  } else {\n    message = \"Players Turn\";\n  }\n\n  return (\n    <div>\n      {message}\n    </div>\n  );\n}\n\nfunction Hole(props)\n{\n  const holesStyle = {\n    backgroundColor: props.owner,\n    height: '50px',\n    width: '50px',\n    borderRadius: '25px',\n    margin: '5px'\n  };\n  \n  return (\n    <button style={holesStyle} id={props.id} onClick={props.onClick} disabled={props.disabled}></button>\n  );\n}\n\nclass GameBoard extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      gameBoard: new Array(6).fill(new Array(7).fill('white')),\n      winner: '',\n      count: 0,\n      playersTurn: 'red', //Game starts with red player \n\n    }\n  }\n\n  renderHole(posX, posY)\n  {\n    let holeId = 'X' + posX + 'Y' + posY;\n    return (\n      //Edit onclick to be better aligned\n      <Hole  id={holeId} owner={this.state.gameBoard[posY][posX]} disabled={(this.state.gameBoard[posY][posX] !== 'white' || this.state.winner !== '')}\n                                          onClick={() => \n                                           {\n                                              const newBoard = this.state.gameBoard.map((arr) => {\n                                                return arr.slice();\n                                              });\n\n                                              let newVal = newBoard[posY];\n\n                                              newVal[posX] = this.state.playersTurn;\n                                            \n\n                                              this.setState({\n                                                playersTurn: (this.state.playersTurn === 'red') ? 'yellow' : 'red',\n                                                gameBoard: newBoard,\n                                                count: (this.state.count + 1),\n                                                winner: checkWinner(newBoard)\n                                              });\n                                            }\n                                        }/>\n    );\n  }\n\n  renderRow(posY)\n  {\n    return (\n      <div>\n        {this.renderHole(0, posY)}\n        {this.renderHole(1, posY)}\n        {this.renderHole(2, posY)}\n        {this.renderHole(3, posY)}\n        {this.renderHole(4, posY)}\n        {this.renderHole(5, posY)}\n        {this.renderHole(6, posY)}\n      </div>\n    );\n  }\n\n  render() \n  {\n    return (\n      <div style={boardStyle}>\n        <div style={{display: 'flex', alignItems: 'center', backgroundColor: 'white', border: '2px solid black'}}>\n          <Hole owner={this.state.playersTurn} id={\"displayDot\"} /> \n          <TurnMessage win={this.state.winner} />\n        </div>\n        <div style={{backgroundColor: 'blue', borderRadius: '5px', width: '420px'}}>\n          {this.renderRow(0)}\n          {this.renderRow(1)}\n          {this.renderRow(2)}\n          {this.renderRow(3)}\n          {this.renderRow(4)}\n          {this.renderRow(5)}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate()\n  {\n    //Move around parts so not in did update\n    let win = checkWinner(this.state.gameBoard);\n    console.log(win);  \n\n  }\n}\n\nfunction checkFour(a, b, c, d)\n{\n  return (\n          (a !== 'white' && b !== 'white' && c !== 'white' && d !== 'white') \n          && \n          (a === b && b === c && c === d)\n    );\n}\n\nfunction checkWinner(b)\n{\n  for (var j = 0; j < 6; j++)\n  {\n    for(var i = 0; i < 4; i++) \n    {\n      if (checkFour(b[j][0 + i], b[j][1 + i], b[j][2 + i], b[j][3 + i]))\n      {\n        return b[j][0 + i];\n      }\n    }\n  }\n\n  for (var j = 0; j < 7; j++)\n  {\n    for(var i = 0; i < 3; i++) \n    {\n      if (checkFour(b[0 + i][j], b[1 + i][j], b[2 + i][j], b[3 + i][j]))\n      {\n        return b[0 + i][j];\n      }\n    }\n  }\n\n  return '';\n}\n\nReactDOM.render(\n  <div style={pageStyle}>\n    <GameBoard />\n    <ResetBtn />\n  </div>\n  ,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}