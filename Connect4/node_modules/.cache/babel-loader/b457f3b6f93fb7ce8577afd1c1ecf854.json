{"ast":null,"code":"var _jsxFileName = \"/Users/cambyce/Downloads/University/Web Technologies (SE 3316)/Labs/Lab2/lab2/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardCountingButton(props) {\n  _s();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"props.id\",\n    onClick: () => {\n      setCount(count + 1);\n    },\n    children: [\"This button was clicked \", count, \" times.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoardCountingButton, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = BoardCountingButton;\n\nclass BoardButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      id: this.props.id,\n      onClick: () => this.setState({\n        count: ++this.state.count\n      }),\n      children: [\"This button was clicked \", this.state.count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {//alert(\"The button was just introduced ==>\" + document.getElementById('btn').getBoundingClientRect().top);\n  }\n\n  componentDidUpdate() {//alert(\"This button has updated\")\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(BoardCountingButton, {\n    id: \"countBtn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(BoardButton, {\n    id: \"btn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardCountingButton\");","map":{"version":3,"sources":["/Users/cambyce/Downloads/University/Web Technologies (SE 3316)/Labs/Lab2/lab2/src/index.js"],"names":["React","useState","ReactDOM","App","reportWebVitals","BoardCountingButton","props","count","setCount","BoardButton","Component","constructor","state","render","id","setState","componentDidMount","componentDidUpdate","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EACA;AAAA;;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,sBACE;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAE,MAAM;AAACO,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,KAA1D;AAAA,2CAC2BA,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GARQF,mB;;KAAAA,mB;;AAST,MAAMI,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CACA;AACEC,EAAAA,WAAW,CAACL,KAAD,EACX;AACE,UAAMA,KAAN;AAEA,SAAKM,KAAL,GAAa;AAACL,MAAAA,KAAK,EAAE;AAAR,KAAb;AACD;;AACDM,EAAAA,MAAM,GACN;AACE,wBACE;AAAQ,MAAA,EAAE,EAAE,KAAKP,KAAL,CAAWQ,EAAvB;AAA2B,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAG,EAAE,KAAKK,KAAL,CAAWL;AAAtB,OAAd,CAA1C;AAAA,6CAC2B,KAAKK,KAAL,CAAWL,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDS,EAAAA,iBAAiB,GACjB,CACE;AACD;;AAEDC,EAAAA,kBAAkB,GAClB,CACE;AACD;;AAxBH;;AA2BAf,QAAQ,CAACW,MAAT,eACE;AAAA,0BACE,QAAC,mBAAD;AAAqB,IAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CAUA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction BoardCountingButton(props)\n{\n  const [count, setCount] = useState(0);\n  return (\n    <button id='props.id' onClick={() => {setCount(count + 1)}}>\n      This button was clicked {count} times.\n    </button>\n  );\n}\nclass BoardButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {count: 0};\n  }\n  render() \n  {\n    return (\n      <button id={this.props.id} onClick={() => this.setState({count: (++this.state.count)})}>\n        This button was clicked {this.state.count} times\n      </button>\n    );\n  }\n\n  componentDidMount() \n  {\n    //alert(\"The button was just introduced ==>\" + document.getElementById('btn').getBoundingClientRect().top);\n  }\n\n  componentDidUpdate()\n  {\n    //alert(\"This button has updated\")\n  }\n}\n\nReactDOM.render(\n  <div>\n    <BoardCountingButton id='countBtn'/>\n    <br/>\n    <BoardButton id='btn'/>\n  </div>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}